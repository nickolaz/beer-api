{
    "swagger": "2.0",
    "info": {
        "description": "Api for a Falabella Challenge.",
        "title": "Falabella Challenge Api",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Nicolas Ayala",
            "url": "https://py.linkedin.com/in/nicolas-ayala-koy",
            "email": "nicoayalakoy@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/beer": {
            "post": {
                "description": "get a beer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beers"
                ],
                "summary": "Create a beer",
                "parameters": [
                    {
                        "description": "Create Beer Structure",
                        "name": "beer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateBeerCMD"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Beer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/beer/{beerID}": {
            "post": {
                "description": "get detail of one beer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beers"
                ],
                "summary": "List a detail of one beer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the beer",
                        "name": "beerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Beer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/beers": {
            "get": {
                "description": "get all beers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beers"
                ],
                "summary": "List beers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Beer"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/beers/day": {
            "get": {
                "description": "get a random beer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beers"
                ],
                "summary": "the beer of the day is a random beer",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Beer"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/beers/{beerID}/boxprice": {
            "get": {
                "description": "get the price of a box by params",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "beers"
                ],
                "summary": "List price of a box by params",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of a beer",
                        "name": "beerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "currency for a final price",
                        "name": "currency",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "quantity of beer in the box",
                        "name": "quantity",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BeerBox"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "Show a hello message for a test status of API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Show a hello message for a test status of API",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Beer": {
            "type": "object",
            "properties": {
                "brewery": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.CreateBeerCMD": {
            "type": "object",
            "properties": {
                "brewery": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "models.ErrorMsg": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "web.BeerBox": {
            "type": "object",
            "properties": {
                "price_total": {
                    "type": "number"
                }
            }
        }
    }
}