basePath: /
definitions:
  models.Beer:
    properties:
      brewery:
        type: string
      country:
        type: string
      currency:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
  models.CreateBeerCMD:
    properties:
      brewery:
        type: string
      country:
        type: string
      currency:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.ErrorMsg:
    properties:
      msg:
        type: string
    type: object
  web.BeerBox:
    properties:
      price_total:
        type: number
    type: object
host: localhost:8080
info:
  contact:
    email: nicoayalakoy@gmail.com
    name: Nicolas Ayala
    url: https://py.linkedin.com/in/nicolas-ayala-koy
  description: Api for a Falabella Challenge.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Falabella Challenge Api
  version: "1.0"
paths:
  /beer:
    post:
      consumes:
      - application/json
      description: get a beer
      parameters:
      - description: Create Beer Structure
        in: body
        name: beer
        required: true
        schema:
          $ref: '#/definitions/models.CreateBeerCMD'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Beer'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: Create a beer
      tags:
      - beers
  /beer/{beerID}:
    post:
      consumes:
      - application/json
      description: get detail of one beer
      parameters:
      - description: ID of the beer
        in: path
        name: beerID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Beer'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: List a detail of one beer
      tags:
      - beers
  /beers:
    get:
      consumes:
      - application/json
      description: get all beers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Beer'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: List beers
      tags:
      - beers
  /beers/{beerID}/boxprice:
    get:
      consumes:
      - application/json
      description: get the price of a box by params
      parameters:
      - description: ID of a beer
        in: path
        name: beerID
        required: true
        type: integer
      - description: currency for a final price
        in: query
        name: currency
        required: true
        type: string
      - description: quantity of beer in the box
        in: query
        name: quantity
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BeerBox'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorMsg'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: List price of a box by params
      tags:
      - beers
  /beers/day:
    get:
      consumes:
      - application/json
      description: get a random beer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Beer'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorMsg'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: the beer of the day is a random beer
      tags:
      - beers
  /hello:
    get:
      consumes:
      - application/json
      description: Show a hello message for a test status of API
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ErrorMsg'
      summary: Show a hello message for a test status of API
      tags:
      - status
swagger: "2.0"
